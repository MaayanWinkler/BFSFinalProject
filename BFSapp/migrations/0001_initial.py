# Generated by Django 5.1 on 2024-08-23 19:25

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EggMonitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_measure', models.DateTimeField()),
                ('passed_hours', models.FloatField()),
                ('cage_code', models.CharField(max_length=100)),
                ('eggs_code', models.CharField(max_length=100)),
                ('egg_weight_1', models.FloatField()),
                ('egg_weight_2', models.FloatField()),
                ('egg_weight_3', models.FloatField()),
                ('num_eggs_1', models.IntegerField()),
                ('num_eggs_2', models.IntegerField()),
                ('num_eggs_3', models.IntegerField()),
                ('avg_single_weight', models.FloatField()),
                ('rsd_single_weight', models.FloatField()),
                ('total_eggs_weight', models.IntegerField()),
                ('added_eggs', models.FloatField()),
                ('fertile_eggs_1', models.IntegerField()),
                ('fertile_eggs_2', models.IntegerField()),
                ('fertile_eggs_3', models.IntegerField()),
                ('infertile_eggs_1', models.IntegerField()),
                ('infertile_eggs_2', models.IntegerField()),
                ('infertile_eggs_3', models.IntegerField()),
                ('fertelity_percentage', models.FloatField()),
                ('rsd_fertelity_percentage', models.FloatField()),
                ('target_density', models.IntegerField()),
                ('amount_of_added_eggs', models.FloatField()),
                ('incubation_temp', models.CharField(max_length=50)),
                ('incubation_tube', models.CharField(max_length=50)),
                ('comments', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='RearingMonitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('crate_code', models.CharField(max_length=100)),
                ('consortium_entoprotech_breeding', models.CharField(max_length=100)),
                ('cycle', models.IntegerField()),
                ('box', models.IntegerField()),
                ('goal', models.CharField(max_length=100)),
                ('starter_date', models.DateTimeField()),
                ('starter_size', models.IntegerField()),
                ('starter_diet', models.CharField(max_length=100)),
                ('length_measure_date', models.DateTimeField()),
                ('average_length', models.FloatField()),
                ('starter_age', models.FloatField()),
                ('cooking_date', models.DateTimeField()),
                ('diet_type', models.CharField(max_length=100)),
                ('measure_date', models.DateTimeField()),
                ('temperature', models.FloatField()),
                ('total_larvae_weight', models.IntegerField()),
                ('number_of_larvae_sampled', models.IntegerField()),
                ('single_larva_weight', models.IntegerField()),
                ('pupation_percentage', models.FloatField()),
                ('substrate_before_drying', models.FloatField()),
                ('substrate_after_drying', models.FloatField()),
                ('harvest_date', models.DateTimeField()),
                ('days_from_laying', models.IntegerField()),
                ('days_from_cooking', models.IntegerField()),
                ('total_pupae_larvae_weight', models.FloatField()),
                ('larvae_pupae_weight', models.FloatField()),
                ('number_of_larvae_pupae_sampled', models.IntegerField()),
                ('single_larvae_pupae_weight', models.IntegerField()),
                ('total_larvae_count', models.IntegerField()),
                ('survival_percentage', models.IntegerField()),
                ('cage_code', models.CharField(max_length=100)),
                ('comments', models.CharField(max_length=100)),
                ('eggs_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BFSapp.eggmonitor')),
            ],
        ),
        migrations.CreateModel(
            name='BreedMonitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('harvest_date', models.DateTimeField()),
                ('single_larvae', models.FloatField()),
                ('starter_date', models.DateTimeField()),
                ('cage_date', models.DateTimeField()),
                ('goal', models.CharField(max_length=50)),
                ('cage_geometry', models.FloatField()),
                ('target_density', models.IntegerField()),
                ('pupae', models.FloatField()),
                ('amount_of_eggs', models.IntegerField()),
                ('hydrogel_surface', models.CharField(max_length=50)),
                ('attractant', models.CharField(max_length=50)),
                ('first_emergence_date', models.DateTimeField()),
                ('peak_daily', models.IntegerField()),
                ('total_eggs_harvest', models.FloatField()),
                ('avg_oviposition', models.IntegerField()),
                ('oviposition', models.IntegerField()),
                ('mg_eggs_female', models.FloatField()),
                ('num_eggs_female', models.IntegerField()),
                ('avg_fertility', models.IntegerField()),
                ('num_clutches', models.IntegerField()),
                ('num_females', models.IntegerField()),
                ('from_hatch_to_emer_days', models.IntegerField()),
                ('days_from_cage_date', models.DateTimeField()),
                ('days_from_egg_placement', models.FloatField()),
                ('days_for_first_egg_from_emer', models.FloatField()),
                ('comments', models.CharField(max_length=100)),
                ('cage_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='breedmonitor_by_cage', to='BFSapp.rearingmonitor')),
                ('crate_code', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='breedmonitor_by_crate', to='BFSapp.rearingmonitor')),
            ],
        ),
    ]
